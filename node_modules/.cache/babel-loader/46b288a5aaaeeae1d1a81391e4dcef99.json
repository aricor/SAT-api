{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/testing/SAT-api/src/Components/TestScreen.js\";\nimport React from 'react';\nimport styles from \"./testscreen.css\";\nimport Timer from './timer';\nimport Highlight from './getHighlight';\nimport ButtonComponent from './button';\nconst qa = {};\nexport default class TestScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"This passage is from James Joyce, The Dubliners originally published in 1914\",\n      questions: [{\n        question: \"1. As presented in the passage, Mr. Kearney is best described as\",\n        choice1: {\n          id: 1,\n          text: \"independent and strong willed.\"\n        },\n        choice2: {\n          id: 2,\n          text: \"paternal and affectionate.\"\n        },\n        choice3: {\n          id: 3,\n          text: \"serious and family oriented.\"\n        },\n        choice4: {\n          id: 4,\n          text: \"boring and simple minded.\"\n        }\n      }, {\n        question: \"1. As presented in the passage, Mr. Kearney is best described as\",\n        choice1: {\n          id: 1,\n          text: \"independent and strong willed.\"\n        },\n        choice2: {\n          id: 2,\n          text: \"paternal and affectionate.\"\n        },\n        choice3: {\n          id: 3,\n          text: \"serious and family oriented.\"\n        },\n        choice4: {\n          id: 4,\n          text: \"boring and simple minded.\"\n        },\n        choice5: {\n          id: 5,\n          text: \"boring and simple minded.\"\n        }\n      }]\n    };\n  }\n\n  renderAllQuestions() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          selectedChoice = _this$state.selectedChoice;\n    return questions.map(question => {\n      return React.createElement(ButtonComponent, {\n        onClick: selectedId => this.setState({\n          selectedChoice: selectedId\n        }),\n        selectedChoice: selectedChoice,\n        question: question.question,\n        choice1: question.choice1,\n        choice2: question.choice2,\n        choice3: question.choice3,\n        choice4: question.choice4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          testData = _this$props.testData,\n          submitHandler = _this$props.submitHandler;\n    const _this$state2 = this.state,\n          questions = _this$state2.questions,\n          selectedChoice = _this$state2.selectedChoice;\n    return React.createElement(\"div\", {\n      className: \"appContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"testContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"passageSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"passagename\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.title)), React.createElement(Highlight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"questionSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"article2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ButtonComponent, {\n      onClick: selectedId => this.setState({\n        selectedChoice: selectedId\n      }),\n      selectedChoice: selectedChoice,\n      question: questions[0].question,\n      choice1: questions[0].choice1,\n      choice2: questions[0].choice2,\n      choice3: questions[0].choice3,\n      choice4: questions[0].choice4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.renderAllQuestions()))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/testing/SAT-api/src/Components/TestScreen.js"],"names":["React","styles","Timer","Highlight","ButtonComponent","qa","TestScreen","Component","constructor","props","state","title","questions","question","choice1","id","text","choice2","choice3","choice4","choice5","renderAllQuestions","selectedChoice","map","selectedId","setState","render","testData","submitHandler"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styles from \"./testscreen.css\"\nimport Timer from './timer'\nimport Highlight from './getHighlight'\nimport ButtonComponent from './button'\nconst qa = ({\n        \n})\nexport default class TestScreen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"This passage is from James Joyce, The Dubliners originally published in 1914\",\n            questions: [\n                {\n                    question: \n                    \"1. As presented in the passage, Mr. Kearney is best described as\",  \n                    choice1: {\n                        id: 1, \n                        text:\"independent and strong willed.\", \n                    },\n                    choice2: {\n                        id:2, \n                        text:\"paternal and affectionate.\",  \n                    },\n                    choice3: {\n                        id:3, \n                        text: \"serious and family oriented.\",  \n                    },\n                    choice4: {\n                        id:4, \n                        text: \"boring and simple minded.\",  \n                    } \n               \n                },\n                {\n                    question: \n                    \"1. As presented in the passage, Mr. Kearney is best described as\",  \n                    choice1: {\n                        id: 1, \n                        text:\"independent and strong willed.\", \n                    },\n                    choice2: {\n                        id:2, \n                        text:\"paternal and affectionate.\",  \n                    },\n                    choice3: {\n                        id:3, \n                        text: \"serious and family oriented.\",  \n                    },\n                    choice4: {\n                        id:4, \n                        text: \"boring and simple minded.\",  \n                    },\n                    choice5: {\n                        id:5, \n                        text: \"boring and simple minded.\",  \n                    } \n               \n                }\n            ],\n        };\n    }\n\n    renderAllQuestions() {\n        const {questions, selectedChoice} = this.state; \n        return questions.map(question => {\n            return (\n                <ButtonComponent\n                        onClick={(selectedId) => this.setState({\n                            selectedChoice: selectedId\n                        })}\n                        selectedChoice={selectedChoice}\n                        question={question.question}\n                        choice1={question.choice1}\n                        choice2={question.choice2}\n                        choice3={question.choice3}\n                        choice4={question.choice4}\n                    />\n            )\n        })\n    }\n\n    render() {\n        const {testData, submitHandler} = this.props;\n        const {questions, selectedChoice} = this.state; \n        return (\n        <div className=\"appContainer\">\n            <Timer/>            \n            <div className=\"testContainer\">\n                <div className=\"passageSection\">\n                <div className=\"passagename\">\n                <b>{this.state.title}</b>\n                </div>\n                <Highlight/>\n                </div>\n                <div className=\"questionSection\">\n                    <div className=\"article2\">\n                    <ButtonComponent\n                        onClick={(selectedId) => this.setState({\n                            selectedChoice: selectedId\n                        })}\n                        selectedChoice={selectedChoice}\n                        question={questions[0].question}\n                        choice1={questions[0].choice1}\n                        choice2={questions[0].choice2}\n                        choice3={questions[0].choice3}\n                        choice4={questions[0].choice4}\n                    />\n\n                    { this.renderAllQuestions() }\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}