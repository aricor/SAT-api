{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/testing/SAT-api/src/Components/TestScreen.js\";\nimport React from 'react';\nimport styles from \"./testscreen.css\";\nimport Timer from './timer';\nimport Highlight from './getHighlight';\nimport ButtonComponent from './button';\nconst qa = {};\nexport default class TestScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"This passage is from James Joyce, The Dubliners originally published in 1914\",\n      questions: [{\n        question: \"1. As presented in the passage, Mr. Kearney is best described as\",\n        choice: [{\n          id: 1,\n          text: \"independent and strong willed.\"\n        }, {\n          id: 2,\n          text: \"paternal and affectionate.\"\n        }, {\n          id: 3,\n          text: \"serious and family oriented.\"\n        }, {\n          id: 4,\n          text: \"boring and simple minded.\"\n        }],\n        selectedChoice: ''\n      }, {\n        question: \"1. As presented in the passage, Mr. Kearney is best described as\",\n        choice: [{\n          id: 1,\n          text: \"independent and strong willed.\"\n        }, {\n          id: 2,\n          text: \"paternal and affectionate.\"\n        }, {\n          id: 3,\n          text: \"serious and family oriented.\"\n        }, {\n          id: 4,\n          text: \"boring and simple minded.\"\n        }],\n        selectedChoice: ''\n      }]\n    };\n  }\n\n  renderAllQuestions() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          selectedChoice = _this$state.selectedChoice;\n    return questions.map(question => {\n      return React.createElement(ButtonComponent, {\n        onClick: selectedId => this.setState({\n          selectedChoice: selectedId\n        }),\n        selectedChoice: questions.selectedChoice,\n        question: questions.question,\n        choice: questions.choice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          testData = _this$props.testData,\n          submitHandler = _this$props.submitHandler;\n    const _this$state2 = this.state,\n          questions = _this$state2.questions,\n          selectedChoice = _this$state2.selectedChoice;\n    return React.createElement(\"div\", {\n      className: \"appContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"testContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"passageSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"passagename\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.title)), React.createElement(Highlight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"questionSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"article2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(ButtonComponent, {\n      onClick: selectedId => this.setState({\n        selectedChoice: selectedId\n      }),\n      selectedChoice: selectedChoice,\n      question: questions[0].question,\n      choice1: questions[0].choice1,\n      choice2: questions[0].choice2,\n      choice3: questions[0].choice3,\n      choice4: questions[0].choice4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), this.renderAllQuestions()))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/testing/SAT-api/src/Components/TestScreen.js"],"names":["React","styles","Timer","Highlight","ButtonComponent","qa","TestScreen","Component","constructor","props","state","title","questions","question","choice","id","text","selectedChoice","renderAllQuestions","map","selectedId","setState","render","testData","submitHandler","choice1","choice2","choice3","choice4"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styles from \"./testscreen.css\"\nimport Timer from './timer'\nimport Highlight from './getHighlight'\nimport ButtonComponent from './button'\nconst qa = ({\n        \n})\nexport default class TestScreen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"This passage is from James Joyce, The Dubliners originally published in 1914\",\n            questions: [\n                {\n                    question: \n                    \"1. As presented in the passage, Mr. Kearney is best described as\",  \n                    choice: [\n                        {\n                            \n                            id: 1, \n                            text:\"independent and strong willed.\", \n                        },\n                        {\n                            id:2, \n                            text:\"paternal and affectionate.\",  \n                        },\n                        {\n                            id:3, \n                            text: \"serious and family oriented.\",  \n                        },\n                        {\n                            id:4, \n                            text: \"boring and simple minded.\",  \n    \n                        } \n                    ],\n                    selectedChoice: '',\n               \n                },\n                {\n                    question: \n                    \"1. As presented in the passage, Mr. Kearney is best described as\",  \n                    choice: [\n                        {\n                            id: 1, \n                            text:\"independent and strong willed.\", \n                        },\n                        {\n                            id:2, \n                            text:\"paternal and affectionate.\",  \n                        },\n                        {\n                            id:3, \n                            text: \"serious and family oriented.\",  \n                        },\n                        {\n                            id:4, \n                            text: \"boring and simple minded.\",  \n    \n                        } \n                    ],\n                    selectedChoice: '',\n               \n                },\n            ],\n        };\n    }\n\n    renderAllQuestions() {\n        const {questions, selectedChoice} = this.state; \n        return questions.map(question => {\n            return (\n                <ButtonComponent\n                        onClick={(selectedId) => this.setState({\n                            selectedChoice: selectedId\n                        })}\n                        selectedChoice={questions.selectedChoice}\n                        question={questions.question}\n                        choice={questions.choice}\n                    />\n            )\n        })\n    }\n\n    render() {\n        const {testData, submitHandler} = this.props;\n        const {questions, selectedChoice} = this.state; \n        return (\n        <div className=\"appContainer\">\n            <Timer/>            \n            <div className=\"testContainer\">\n                <div className=\"passageSection\">\n                <div className=\"passagename\">\n                <b>{this.state.title}</b>\n                </div>\n                <Highlight/>\n                </div>\n                <div className=\"questionSection\">\n                    <div className=\"article2\">\n                    <ButtonComponent\n                        onClick={(selectedId) => this.setState({\n                            selectedChoice: selectedId\n                        })}\n                        selectedChoice={selectedChoice}\n                        question={questions[0].question}\n                        choice1={questions[0].choice1}\n                        choice2={questions[0].choice2}\n                        choice3={questions[0].choice3}\n                        choice4={questions[0].choice4}\n                    />\n\n                    { this.renderAllQuestions() }\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}