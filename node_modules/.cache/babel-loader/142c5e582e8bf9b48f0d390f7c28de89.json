{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\demo2\\\\SAT-api\\\\src\\\\Components\\\\mathComponent.js\";\nimport React, { Component } from \"react\";\nimport { Form, FormGroup, Label, Input, FormText, Row, Col } from \"reactstrap\";\nexport default class MathComponent extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  displayResult() {\n    const correctAnswer = this.props.correctAnswer;\n    const input = this.props.input;\n    console.log(correctAnswer);\n\n    if (input === '' || input === correctAnswer) {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        as: Row,\n        controlId: \"formPlainCorrectAnswer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Label, {\n        column: true,\n        sm: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Correct Answer\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Input, {\n        plaintext: true,\n        value: correctAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }))));\n      console.log(correctAnswer);\n    } else {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        as: Row,\n        controlId: \"formPlainCorrectAnswer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Label, {\n        column: true,\n        sm: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Correct Answer\"), React.createElement(Input, {\n        plaintext: true,\n        value: correctAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        as: Row,\n        controlId: \"formPlainCorrectAnswer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Label, {\n        column: true,\n        sm: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Your Incorrect Answer\"), React.createElement(Input, {\n        plaintext: true,\n        value: input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }\n\n  displayForm() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"fillInAnswer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      onChange: event => this.props.onChange(event.target.value),\n      name: \"ans\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Letters are not accepted as answer\")));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", this.props.question, \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, !this.props.isTestSubmitted && this.displayForm(), this.props.isTestSubmitted && this.displayResult()));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\demo2\\SAT-api\\src\\Components\\mathComponent.js"],"names":["React","Component","Form","FormGroup","Label","Input","FormText","Row","Col","MathComponent","constructor","props","displayResult","correctAnswer","input","console","log","displayForm","event","onChange","target","value","render","question","isTestSubmitted"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport { Form, FormGroup, Label, Input, FormText , Row, Col } from \"reactstrap\"; \r\nexport default class MathComponent extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        \r\n    }\r\n\r\n    displayResult() {\r\n        const correctAnswer = this.props.correctAnswer;\r\n        const input = this.props.input; \r\n        console.log(correctAnswer)\r\n        if (input === '' || input === correctAnswer) {\r\n            return (\r\n                <Form>\r\n                    <FormGroup as={Row} controlId=\"formPlainCorrectAnswer\">\r\n                    <Label column sm=\"2\">Correct Answer</Label>\r\n                    <Col sm={10}>\r\n                    <Input plaintext value ={correctAnswer} />\r\n                    </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            )\r\n            console.log(correctAnswer)\r\n        } else {\r\n            return (\r\n                <Form>\r\n                    <FormGroup as={Row} controlId=\"formPlainCorrectAnswer\">\r\n                    <Label column sm=\"2\">Correct Answer</Label>\r\n                    <Input plaintext value ={correctAnswer} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup as={Row} controlId=\"formPlainCorrectAnswer\">\r\n                    <Label column sm=\"2\">Your Incorrect Answer</Label>\r\n                    <Input plaintext value ={input} />\r\n                    </FormGroup>\r\n                </Form>\r\n            )\r\n        }\r\n    }\r\n\r\n    displayForm() {\r\n        return (\r\n            <Form>\r\n                <FormGroup controlId=\"fillInAnswer\">\r\n                <Input type=\"text\" onChange={(event) => this.props.onChange(event.target.value)} name=\"ans\"  required  />\r\n                    <FormText className=\"text-muted\">\r\n                        Letters are not accepted as answer\r\n                    </FormText>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p><b> {this.props.question} </b></p>\r\n                <div> \r\n                    {\r\n                        !this.props.isTestSubmitted && this.displayForm()\r\n                    }\r\n\r\n                    {\r\n                        this.props.isTestSubmitted && this.displayResult()\r\n                    }\r\n                    \r\n               </div>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}