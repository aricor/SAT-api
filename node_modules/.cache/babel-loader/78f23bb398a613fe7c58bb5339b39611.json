{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\demo2\\\\SAT-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\demo2\\\\SAT-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\demo2\\\\SAT-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\demo2\\\\SAT-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\demo2\\\\SAT-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import styles from'./timer.css';var Timer=/*#__PURE__*/function(_Component){_inherits(Timer,_Component);function Timer(props){var _this;_classCallCheck(this,Timer);_this=_possibleConstructorReturn(this,_getPrototypeOf(Timer).call(this,props));_this.state={minutes:props.initialTimer,seconds:0,sectionType:props.sectionType};return _this;}_createClass(Timer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.myInterval=setInterval(function(){var _this2$state=_this2.state,seconds=_this2$state.seconds,minutes=_this2$state.minutes;if(seconds>0){_this2.setState(function(_ref){var seconds=_ref.seconds;return{seconds:seconds-1};});}if(seconds===0){if(minutes===0){_this2.props.onTimeEnd();}else{_this2.setState(function(_ref2){var minutes=_ref2.minutes;return{minutes:minutes-1,seconds:59};});}}},1000);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.myInterval);}},{key:\"renderTimerText\",value:function renderTimerText(){var _this$state=this.state,minutes=_this$state.minutes,seconds=_this$state.seconds;if(minutes===0&&seconds===0){return React.createElement(\"h1\",null,\"Time's up!\");}else if(minutes===0&seconds<=15){return React.createElement(\"h1\",null,\"### WARNING ### Time Remaining: \",minutes<10?\"0\".concat(minutes):minutes,\" :\",seconds<10?\"0\".concat(seconds):seconds);}else{return React.createElement(\"h1\",null,minutes<10?\"0\".concat(minutes):minutes,\":\",seconds<10?\"0\".concat(seconds):seconds);}}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,this.renderTimerText());}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevProps){if(nextProps.sectionType!==prevProps.sectionType){return{minutes:nextProps.initialTimer,seconds:0,sectionType:nextProps.sectionType};}}}]);return Timer;}(Component);export{Timer as default};","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\demo2\\SAT-api\\src\\Components\\timer.js"],"names":["React","Component","styles","Timer","props","state","minutes","initialTimer","seconds","sectionType","myInterval","setInterval","setState","onTimeEnd","clearInterval","renderTimerText","nextProps","prevProps"],"mappings":"yoBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,C,GAEqBC,CAAAA,K,+DACjB,eAAYC,KAAZ,CAAmB,uCACf,uEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,OAAO,CAAEF,KAAK,CAACG,YADN,CAETC,OAAO,CAAE,CAFA,CAGTC,WAAW,CAAEL,KAAK,CAACK,WAHV,CAAb,CAFe,aAOlB,C,+EAGmB,iBAEhB,KAAKC,UAAL,CAAkBC,WAAW,CAAC,UAAM,kBACH,MAAI,CAACN,KADF,CACxBG,OADwB,cACxBA,OADwB,CACfF,OADe,cACfA,OADe,CAGhC,GAAIE,OAAO,CAAG,CAAd,CAAiB,CACb,MAAI,CAACI,QAAL,CAAc,kBAAGJ,CAAAA,OAAH,MAAGA,OAAH,OAAkB,CAC5BA,OAAO,CAAEA,OAAO,CAAG,CADS,CAAlB,EAAd,EAGH,CACD,GAAIA,OAAO,GAAK,CAAhB,CAAmB,CACf,GAAIF,OAAO,GAAK,CAAhB,CAAmB,CACf,MAAI,CAACF,KAAL,CAAWS,SAAX,GACH,CAFD,IAEO,CACH,MAAI,CAACD,QAAL,CAAc,mBAAGN,CAAAA,OAAH,OAAGA,OAAH,OAAkB,CAC5BA,OAAO,CAAEA,OAAO,CAAG,CADS,CAE5BE,OAAO,CAAE,EAFmB,CAAlB,EAAd,EAIH,CACJ,CACJ,CAlB4B,CAkB1B,IAlB0B,CAA7B,CAmBH,C,mEAasB,CACnBM,aAAa,CAAC,KAAKJ,UAAN,CAAb,CACH,C,yDAEiB,iBACe,KAAKL,KADpB,CACNC,OADM,aACNA,OADM,CACGE,OADH,aACGA,OADH,CAEd,GAAIF,OAAO,GAAK,CAAZ,EAAiBE,OAAO,GAAK,CAAjC,CAAoC,CAChC,MACI,4CADJ,CAGH,CAJD,IAIO,IAAIF,OAAO,GAAK,CAAZ,CAAgBE,OAAO,EAAI,EAA/B,CAAmC,CACtC,MACI,kEAAqCF,OAAO,CAAG,EAAV,YAAmBA,OAAnB,EAA8BA,OAAnE,MAA8EE,OAAO,CAAG,EAAV,YAAmBA,OAAnB,EAA+BA,OAA7G,CADJ,CAGH,CAJM,IAIA,CACH,MACI,+BACKF,OAAO,CAAG,EAAV,YAAmBA,OAAnB,EAA8BA,OADnC,KAC6CE,OAAO,CAAG,EAAV,YAAmBA,OAAnB,EAA+BA,OAD5E,CADJ,CAKH,CAEJ,C,uCAEQ,CACL,MACI,gCACC,KAAKO,eAAL,EADD,CADJ,CAKH,C,4EAzC+BC,S,CAAWC,S,CAAW,CAClD,GAAGD,SAAS,CAACP,WAAV,GAA0BQ,SAAS,CAACR,WAAvC,CAAmD,CAC/C,MAAO,CACHH,OAAO,CAAEU,SAAS,CAACT,YADhB,CAEHC,OAAO,CAAE,CAFN,CAGHC,WAAW,CAAEO,SAAS,CAACP,WAHpB,CAAP,CAKH,CAEJ,C,mBA3C8BR,S,SAAdE,K","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport styles from './timer.css'\r\n\r\nexport default class Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minutes: props.initialTimer, \r\n            seconds: 0, \r\n            sectionType: props.sectionType,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n       \r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.onTimeEnd();\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            } \r\n        }, 1000)\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevProps) {\r\n        if(nextProps.sectionType !== prevProps.sectionType){\r\n            return {\r\n                minutes: nextProps.initialTimer, \r\n                seconds: 0,\r\n                sectionType: nextProps.sectionType,\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    renderTimerText() {\r\n        const { minutes, seconds } = this.state;\r\n        if (minutes === 0 && seconds === 0) {\r\n            return (\r\n                <h1>Time's up!</h1>\r\n            );\r\n        } else if (minutes === 0 & seconds <= 15) {\r\n            return (\r\n                <h1>### WARNING ### Time Remaining: {minutes < 10 ? `0${minutes}`: minutes} :{seconds < 10 ? `0${seconds}` : seconds}</h1>\r\n            )\r\n        } else {\r\n            return (\r\n                <h1>\r\n                    {minutes < 10 ? `0${minutes}`: minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n                </h1>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n            {this.renderTimerText()}\r\n            </div>\r\n        )\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}