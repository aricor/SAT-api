{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\demo2\\\\SAT-api\\\\src\\\\Components\\\\mathComponent.js\";\nimport React, { Component } from \"react\";\nimport './button.css';\nimport { Form, FormControl, FormGroup, FormLabel } from \"react-bootstrap\";\nexport default class ButtonComponent extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  displayResult() {\n    const correctAnswer = this.props.correctAnswer;\n    const input = this.props.input;\n\n    if (input === '' || input === correctAnswer) {\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"fillInAnswer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        onChange: event => this.props.onChange(event.target.value),\n        name: \"ans\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Letters are not accepted as answer\")));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" \", this.props.question, \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, !this.props.isTestSubmitted && React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"fillInAnswer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      onChange: event => this.props.onChange(event.target.value),\n      name: \"ans\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Letters are not accepted as answer\"))), this.props.isTestSubmitted));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\demo2\\SAT-api\\src\\Components\\mathComponent.js"],"names":["React","Component","Form","FormControl","FormGroup","FormLabel","ButtonComponent","constructor","props","displayResult","correctAnswer","input","event","onChange","target","value","render","question","isTestSubmitted"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;AACA,SAAQC,IAAR,EAAcC,WAAd,EAA2BC,SAA3B,EAAsCC,SAAtC,QAAsD,iBAAtD;AACA,eAAe,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACnDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,UAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWE,aAAjC;AACA,UAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;;AACA,QAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKD,aAA9B,EAA6C;AACzC,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,EAAGE,KAAD,IAAW,KAAKJ,KAAL,CAAWK,QAAX,CAAoBD,KAAK,CAACE,MAAN,CAAaC,KAAjC,CAAnC;AAA4E,QAAA,IAAI,EAAC,KAAjF;AAAuF,QAAA,IAAI,EAAC,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFA,CADA,CADJ;AAUH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKR,KAAL,CAAWS,QAAhB,MAAH,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEY,CAAC,KAAKT,KAAL,CAAWU,eAAZ,IACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAGN,KAAD,IAAW,KAAKJ,KAAL,CAAWK,QAAX,CAAoBD,KAAK,CAACE,MAAN,CAAaC,KAAjC,CAAnC;AAA4E,MAAA,IAAI,EAAC,KAAjF;AAAuF,MAAA,IAAI,EAAC,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFA,CADA,CAHZ,EAcY,KAAKP,KAAL,CAAWU,eAdvB,CAFJ,CADJ;AAwBH;;AA/CkD","sourcesContent":["import React, {Component} from \"react\";\r\nimport './button.css';\r\nimport {Form, FormControl, FormGroup, FormLabel} from \"react-bootstrap\"; \r\nexport default class ButtonComponent extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        \r\n    }\r\n\r\n    displayResult() {\r\n        const correctAnswer = this.props.correctAnswer;\r\n        const input = this.props.input; \r\n        if (input === '' || input === correctAnswer) {\r\n            return (\r\n                <Form>\r\n                <Form.Group controlId=\"fillInAnswer\">\r\n                <Form.Control onChange={(event) => this.props.onChange(event.target.value)} name=\"ans\" type=\"text\" />\r\n                <Form.Text className=\"text-muted\">\r\n                  Letters are not accepted as answer\r\n                </Form.Text>\r\n                </Form.Group>\r\n                </Form>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p><b> {this.props.question} </b></p>\r\n                <div> \r\n                        {\r\n                            !this.props.isTestSubmitted && \r\n                            <Form>\r\n                            <Form.Group controlId=\"fillInAnswer\">\r\n                            <Form.Control onChange={(event) => this.props.onChange(event.target.value)} name=\"ans\" type=\"text\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                              Letters are not accepted as answer\r\n                            </Form.Text>\r\n                            </Form.Group>\r\n                            </Form>\r\n                        }\r\n\r\n                        {\r\n                            this.props.isTestSubmitted\r\n                        }\r\n                    \r\n               </div>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}