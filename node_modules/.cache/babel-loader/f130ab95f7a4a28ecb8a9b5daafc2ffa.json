{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test2/SAT-api/src/Components/TestScreen.js\";\nimport React from 'react';\nimport styles from \"./testscreen.css\";\nimport Timer from './timer';\nimport Highlight from './getHighlight';\nimport ButtonComponent from './button';\nexport default class TestScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"This passage is from James Joyce, The Dubliners originally published in 1914\",\n      questions: [{\n        question: \"1. As presented in the passage, Mr. Kearney is best described as\",\n        choices: [{\n          opt: 'A',\n          id: 1,\n          text: \"independent and strong willed.\"\n        }, {\n          opt: 'B',\n          id: 2,\n          text: \"paternal and affectionate.\"\n        }, {\n          opt: 'C',\n          id: 3,\n          text: \"serious and family oriented.\"\n        }, {\n          opt: 'D',\n          id: 4,\n          text: \"boring and simple minded.\"\n        }],\n        selectedChoice: ''\n      }, {\n        question: \"1. As presented in the passage, Mr. Kearney is best described as\",\n        choices: [{\n          opt: 'A',\n          id: 1,\n          text: \"independent and strong willed.\"\n        }, {\n          opt: 'B',\n          id: 2,\n          text: \"paternal and affectionate.\"\n        }, {\n          opt: 'C',\n          id: 3,\n          text: \"serious and family oriented.\"\n        }, {\n          opt: 'D',\n          id: 4,\n          text: \"boring and simple minded.\"\n        }],\n        selectedChoice: ''\n      }]\n    };\n  }\n\n  renderAllQuestions() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          selectedChoice = _this$state.selectedChoice;\n    return questions.map(question => {\n      return React.createElement(ButtonComponent, {\n        onClick: selectedId => this.setState({\n          selectedChoice: selectedId\n        }),\n        selectedChoice: question.selectedChoice,\n        question: question.question,\n        choices: question.choices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          testData = _this$props.testData,\n          submitHandler = _this$props.submitHandler;\n    return React.createElement(\"div\", {\n      className: \"appContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"testContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"passageSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"passagename\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.title)), React.createElement(Highlight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"questionSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"article2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.renderAllQuestions()))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/test2/SAT-api/src/Components/TestScreen.js"],"names":["React","styles","Timer","Highlight","ButtonComponent","TestScreen","Component","constructor","props","state","title","questions","question","choices","opt","id","text","selectedChoice","renderAllQuestions","map","selectedId","setState","render","testData","submitHandler"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styles from \"./testscreen.css\"\nimport Timer from './timer'\nimport Highlight from './getHighlight'\nimport ButtonComponent from './button'\nexport default class TestScreen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"This passage is from James Joyce, The Dubliners originally published in 1914\",\n            questions: [\n                {\n                    question: \n                    \"1. As presented in the passage, Mr. Kearney is best described as\",  \n                    choices: [\n                        {\n                            opt: 'A',\n                            id: 1, \n                            text:\"independent and strong willed.\", \n                        },\n                        {\n                            opt: 'B',\n                            id:2, \n                            text:\"paternal and affectionate.\",  \n                        },\n                        {\n                            opt: 'C',\n                            id:3, \n                            text: \"serious and family oriented.\",  \n                        },\n                        {\n                            opt: 'D',\n                            id:4, \n                            text: \"boring and simple minded.\",  \n                        } \n                    ],\n                    selectedChoice: '',\n               \n                },\n                {\n                    question: \n                    \"1. As presented in the passage, Mr. Kearney is best described as\",  \n                    choices: [\n                        {\n                            opt: 'A',\n                            id: 1, \n                            text:\"independent and strong willed.\", \n                        },\n                        {\n                            opt: 'B',\n                            id:2, \n                            text:\"paternal and affectionate.\",  \n                        },\n                        {\n                            opt: 'C',\n                            id:3, \n                            text: \"serious and family oriented.\",  \n                        },\n                        {\n                            opt: 'D',\n                            id:4, \n                            text: \"boring and simple minded.\",  \n                        } \n                    ],\n                    selectedChoice: '',\n               \n                },\n            ],\n        };\n    }\n\n    renderAllQuestions() {\n        const {questions, selectedChoice} = this.state; \n        return questions.map(question => {\n            return (\n                <ButtonComponent\n                        onClick={(selectedId) => this.setState({\n                            selectedChoice: selectedId\n                        })}\n                        selectedChoice={question.selectedChoice}\n                        question={question.question}\n                        choices={question.choices}\n                    />\n            )\n        })\n    }\n\n    render() {\n        const {testData, submitHandler} = this.props\n        return <div className=\"appContainer\">\n            <Timer/>            \n            <div className=\"testContainer\">\n                <div className=\"passageSection\">\n                <div className=\"passagename\">\n                <b>{this.state.title}</b>\n                </div>\n                <Highlight/>\n                </div>\n                <div className=\"questionSection\">\n                    <div className=\"article2\">\n                    {this.renderAllQuestions()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}